import java.util.Random; //For the random number generator in shuffleCards function

/*
 * A Deck class represents a deck of cards, having 52 cards in its one instance.
 * The NUM_CARDS_PER_DECK is a constant having value 52.
 * Card[] cards is the main array of 'Card' type objects.
 */

public class Deck {
	private static final int NUM_CARDS_PER_DECK = 52;
	private Card[] cards;

	//A simple constructor that builds 'Deck' objects.
	public Deck(int numPacks) {
		cards = new Card[NUM_CARDS_PER_DECK];
		this.allocateCardsToDeck();
	}

	//A default constructor that instantiates a deck of only one pack of cards.
	public Deck() {
		cards = new Card[NUM_CARDS_PER_DECK];
		this.allocateCardsToDeck();
	}

	//Initializes the staticPack[] array. Checks to ensure its called only once.
	private void allocateCardsToDeck() {
		int index = 0;
		char[] validValues = { 'A', '2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'Q', 'K' };

		for (Card.Suit currentSuit : Card.Suit.values()) {
			for (char currentChar : validValues) {
				this.cards[index++] = new Card(currentChar, currentSuit);
			}
		}
	}
	
	//This method shuffles the deck of card by randomly re-ordering each card in the array.
	public void shuffleCards() {
		Random randomNoGenerator = new Random(); // Random number generator
		
		for (int i = 0; i < cards.length; i++) {
			int randomPosition = randomNoGenerator.nextInt(cards.length);
			Card temp = cards[i];
			cards[i] = cards[randomPosition];
			cards[randomPosition] = temp;
		}
	}
	
	//This method prints all contents of the deck.
	public String toString(){
		String output = "";
		for (Card currentCard : cards) {
			output = output + currentCard.toString() + ", ";
		}
		output = output.substring(0, output.length() - 2);
		return output;
	}

	public static void main(String[] args) {
		
		Deck myDeck = new Deck();
		System.out.println("\nThe Deck currenlty contains ... :");
		System.out.println(myDeck.toString());
		myDeck.shuffleCards();
		System.out.println("\nAfter shuffling the cards ... :");
		System.out.println(myDeck.toString());
	
	}
}
